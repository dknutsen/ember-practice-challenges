import Component from '@glimmer/component';
import { action } from '@ember/object';
  import { on } from '@ember/modifier';
import { tracked } from '@glimmer/tracking';
import { inject as service } from '@ember/service';

import canvasRenderer from './defining-service/canvas-renderer';
import Vector from './defining-service/vector';
import Ball from './defining-service/ball';
import Block from './defining-service/block';
import Thing from './defining-service/thing';

/**
 * Do not edit this file
 */
const randf = (max, min = 0) => min + (Math.random() * (max - min));
const randi = (max, min = 0) => Math.floor(randf(min, max));
const colors = ['red', 'orange', 'yellow', 'green', 'blue', 'purple'];

class BounceCanvas extends Component {
  sprites = [
    ...Array.from(Array(10)).map(() => {
      return new Ball(
        randf(this.args.width - 5, 5),
        randf(this.args.height - 5, 5),
        new Vector(randf(10.0, -10.0), randf(10.0, -10.0)),
        randf(15.0, 8.0),
        colors[randi(colors.length)],
      );
    }),
  ];

  <template>
    <canvas
      class="border border-black border-solid"
      width={{@width}}
      height={{@height}}
      {{canvasRenderer this.sprites @width @height}}
    >
      A canvas with moving shapes
    </canvas>
  </template>
}

// main challenge component, renders a few canvas components
export default <template>
  <div class="grid grid-cols-3">
    <BounceCanvas @width={{300}} @height={{200}} />
    <BounceCanvas @width={{300}} @height={{200}} />
    <BounceCanvas @width={{300}} @height={{200}} />
  {{!--
    <BounceCanvas @width={{300}} @height={{200}} />
    <BounceCanvas @width={{300}} @height={{200}} />
    <BounceCanvas @width={{300}} @height={{200}} />
    <BounceCanvas @width={{300}} @height={{200}} />
    <BounceCanvas @width={{300}} @height={{200}} />
  --}}
  </div>
</template>
